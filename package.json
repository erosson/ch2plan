{
  "name": "ch2plan",
  "version": "1.0.0",
  "main": "index.js",
  "author": "Evan <github@erosson.org>",
  "license": "GPL-3.0",
  "private": true,
  "scripts": {
    "tf:init": "terraform init",
    "tf:plan": "terraform plan",
    "tf:apply": "terraform apply -auto-approve",
    "export:icons": "scripty",
    "export:chars": "scripty",
    "export:postchars": "scripty assets/ch2data/chars/latest.json",
    "export:as3": "scripty",
    "//dev": "All this `bash -xc '... && true '` boilerplate makes things work on windows, with git-for-windows bash installed. I'm not a real windows dev, sorry - happy to take nicer pull requests here",
    "copyDeps": "bash -xc 'mkdir -p assets/lib && cp node_modules/amf-js/src/amf.js assets/lib && cp node_modules/zlibjs/bin/rawinflate.min.js assets/lib && true '",
    "dev": "bash -xc 'yarn copyDeps && cp CHANGELOG.md ./assets && elm-live src/Main.elm --open --dir=assets -- --output assets/elm.js && true '",
    "build": "bash -xc 'rm -rf dist && mkdir dist && yarn copyDeps && cp CHANGELOG.md dist/ && cp -rp assets/* dist/ && elm make src/Main.elm --optimize --output dist/elm.js && true '",
    "//test": "you probably want to run this with --watch, like 'yarn test --watch'",
    "format": "bash -xc 'elm-format --yes src && prettier --write assets/ports.js assets/stats.json && true '",
    "lint": "bash -xc 'elm-format --validate src && prettier --list-different assets/ports.js assets/stats.json && true '",
    "test": "yarn lint && elm-test",
    "start": "bash -xc 'yarn build && serve dist && true '"
  },
  "//optionalDependencies": "because travis fails to install me, but doesn't actually need me",
  "optionalDependencies": {
    "terraform-npm": "0.2.6"
  },
  "dependencies": {
    "amf-js": "^1.0.4",
    "zlibjs": "^0.3.1"
  },
  "devDependencies": {
    "elm": "^0.19.1-3",
    "elm-format": "^0.8.3",
    "elm-live": "^4.0.2",
    "elm-test": "^0.19.1-revision2",
    "prettier": "^2.0.5",
    "scripty": "^2.0.0",
    "serve": "^11.3.0",
    "sort-json": "^2.0.0"
  }
}
